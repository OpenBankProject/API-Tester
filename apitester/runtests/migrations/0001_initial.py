# Generated by Django 2.0.7 on 2020-10-23 10:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProfileOperation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_id', models.IntegerField(help_text='Test Profile id', verbose_name='Profile id')),
                ('operation_id', models.CharField(blank=True, help_text='Test endpoint opreation id', max_length=255, null=True, verbose_name='Operation id ')),
                ('json_body', models.TextField(help_text='The json body to the  test request', max_length=65535, verbose_name='Json body')),
                ('order', models.IntegerField(default=100, help_text='Test order', verbose_name='Order')),
                ('urlpath', models.CharField(blank=True, help_text='The url', max_length=255, null=True, verbose_name='The url')),
                ('replica_id', models.IntegerField(default=1, help_text='Test Replica id', verbose_name='Replica id')),
                ('remark', models.CharField(blank=True, help_text='remark', max_length=255, null=True, verbose_name='remark')),
                ('is_deleted', models.IntegerField(default=0, help_text='Deleted', verbose_name='Deleted')),
                ('method', models.CharField(blank=True, help_text='method', max_length=255, verbose_name='method')),
                ('save_time', models.CharField(blank=True, help_text='save_time', max_length=255, verbose_name='save_time')),
            ],
            options={
                'verbose_name_plural': 'Test Profile Operation',
                'verbose_name': 'Test Profile Operation',
            },
        ),
        migrations.CreateModel(
            name='TestConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the configuration', max_length=255, unique=True, verbose_name='Name')),
                ('api_version', models.CharField(help_text='Version of the API to initially generate in the format STANDARDvVERSION e.g. OBPv4.0.0', max_length=255, verbose_name='API Version')),
                ('resource_doc_params', models.CharField(blank=True, help_text='Parameters to limit the endpoint tests that are initially generated in this profile. e.g: functions=getBanks,bankById or tags=Account See the documentation for the getResourceDocsSwagger endpoint in the API Explorer for more information.', max_length=255, null=True, verbose_name='Params')),
                ('username', models.CharField(blank=True, help_text='Username', max_length=255, null=True, verbose_name='Username')),
                ('bank_id', models.CharField(blank=True, help_text='Bank identifier', max_length=255, null=True, verbose_name='Bank Id')),
                ('branch_id', models.CharField(blank=True, help_text='Bank branch identifier', max_length=255, null=True, verbose_name='Branch Id')),
                ('atm_id', models.CharField(blank=True, help_text='ATM identifier', max_length=255, null=True, verbose_name='ATM Id')),
                ('account_id', models.CharField(blank=True, help_text='Account identifier', max_length=255, null=True, verbose_name='Account Id')),
                ('other_account_id', models.CharField(blank=True, help_text='Account identifier of another account', max_length=255, null=True, verbose_name='Other Account Id')),
                ('view_id', models.CharField(blank=True, help_text='View identifier', max_length=255, null=True, verbose_name='View Id')),
                ('user_id', models.CharField(blank=True, help_text='User identifier', max_length=255, null=True, verbose_name='User Id')),
                ('provider_id', models.CharField(blank=True, help_text='Provider identifier', max_length=255, null=True, verbose_name='Provider Id')),
                ('customer_id', models.CharField(blank=True, help_text='Customer identifier', max_length=255, null=True, verbose_name='Customer Id')),
                ('transaction_id', models.CharField(blank=True, help_text='Transaction identifier', max_length=255, null=True, verbose_name='Transaction Id')),
                ('counterparty_id', models.CharField(blank=True, help_text='Counterparty identifier', max_length=255, null=True, verbose_name='Counterparty Id')),
                ('from_currency_code', models.CharField(blank=True, help_text='Currency code to convert from', max_length=255, null=True, verbose_name='From Currency Code')),
                ('to_currency_code', models.CharField(blank=True, help_text='Currency code to convert to', max_length=255, null=True, verbose_name='To Currency Code')),
                ('product_code', models.CharField(blank=True, help_text="Product code of a bank's product", max_length=255, null=True, verbose_name='Product Code')),
                ('meeting_id', models.CharField(blank=True, help_text='Meeting identifier of a bank\\s meeting', max_length=255, null=True, verbose_name='Meeting Id')),
                ('consumer_id', models.CharField(blank=True, help_text='Consumer identifier of a registered app', max_length=255, null=True, verbose_name='Consumer Id')),
                ('owner', models.ForeignKey(help_text='User who owns this configuration', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name_plural': 'Test Configurations',
                'verbose_name': 'Test Configuration',
            },
        ),
    ]
